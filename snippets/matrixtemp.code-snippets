{

	"Abeshek C++ Template": {
		"prefix": "matrixtemp",
		"body": [
			"template<typename T>",
"struct matrix{",
	"\tT mat[2][2];",
	"\tmatrix(){}",
	"\tvoid matrix_init(T a,T b,T c,T d)",
	"\t{",
		"\t\tmat[0][0] = a;",
		"\t\tmat[0][1] = b;",
		"\t\tmat[1][0] = c;",
		"\t\tmat[1][1] = d;",
	"\t}",
	"\tmatrix operator * (const matrix &b)",
	"\t{",
		"\t\tmatrix res;",
		"\t\tres.matrix_init(0,0,0,0);",
		"\t\tfor(ll i=0;i<2;i++)",
		"\t\t{",
			"\t\t\tfor(ll k=0;k<2;k++)",
			"\t\t\t{",
				"\t\t\t\tfor(ll j=0;j<2;j++)",
				"\t\t\t\t{",
					"\t\t\t\t\tres.mat[i][k] += (mat[i][j]*b.mat[j][k]);",
				"\t\t\t\t}",
			"\t\t\t}",
		"\t\t}",
		"\t\treturn res;",
	"\t}",
	"\tvoid print()",
	"\t{",
		"\t\tfor(ll i=0;i<2;i++)",
		"\t\t{",
			"\t\t\tfor(ll j=0;j<2;j++)",
			"\t\t\t{",
				"\t\t\t\tcout<<mat[i][j]<<\" \";",
			"\t\t\t}",
			"\t\t\tcout<<\"\\n\";",
		"\t\t}",
	"\t}",
"};",
"",
"using Mat = matrix<ll>;",
"",
"Mat b_expo(Mat a, ll n)",
"{",
	"\tMat res;",
	"\tres.matrix_init(1, 0, 0, 1);",
	"\twhile (n > 0)",
	"\t{",
		"\t\tif (n % 2 == 1)",
		"\t\t{",
			"\t\t\tres = res * a;",
		"\t\t}",
		"\t\tn /= 2;",
		"\t\ta = a * a;",
	"\t}",
	"\treturn res;",
"}"
		],		"description": "matrix template for matrix expo and stuff"
	}
}