{

	"Abeshek C++ Template": {
		"prefix": "segtemp",
		"body": [
			"// change N ",
"const int N = 1e6 + 6;",
"ll lo[4 * N + 1], hi[4 * N + 1], delta[4 * N + 1], mini[4 * N + 1];",
"",
"// change update and rmq according to question",
"",
"void buildSeg(ll node, ll l, ll r)",
"{",
    "\tlo[node] = l;",
    "\thi[node] = r;",
    "\tif (l == r)",
    "\t{",
        "\t\treturn;",
    "\t}",
    "\tll mid = l + (r - l) / 2;",
    "\tbuildSeg(2 * node + 1, l, mid);",
    "\tbuildSeg(2 * node + 2, mid + 1, r);",
"}",
"",
"void prop(ll i)",
"{",
    "\tdelta[2 * i + 1] += delta[i];",
    "\tdelta[2 * i + 2] += delta[i];",
    "\tdelta[i] = 0;",
"}",
"",
"void update(ll i)",
"{",
    "\tmini[i] = min(mini[2 * i + 1] + delta[2 * i + 1], mini[2 * i + 2] + delta[2 * i + 2]);",
"}",
"",
"void increment(ll i, ll l, ll r, ll val)",
"{",
    "\tif (r < lo[i] || l > hi[i])",
    "\t{",
        "\t\treturn;",
    "\t}",
    "\tif (l <= lo[i] && r >= hi[i])",
    "\t{",
        "\t\tdelta[i] += val;",
        "\t\treturn;",
    "\t}",
    "\tprop(i);",
"",
    "\tincrement(2 * i + 1, l, r, val);",
    "\tincrement(2 * i + 2, l, r, val);",
    "\tupdate(i);",
"}",
"",
"ll rmq(ll i, ll l, ll r)",
"{",
    "\tif (r < lo[i] || l > hi[i])",
    "\t{",
        "\t\treturn 1e18;",
    "\t}",
    "\tif (l <= lo[i] && r >= hi[i])",
    "\t{",
        "\t\treturn mini[i] + delta[i];",
    "\t}",
    "\tprop(i);",
    "\tll lefmin = rmq(2 * i + 1, l, r);",
    "\tll rigmin = rmq(2 * i + 2, l, r);",
    "\tupdate(i);",
    "\treturn min(lefmin, rigmin);",
"}"
		],
		"description": "My custom segment tree template"
	}
}